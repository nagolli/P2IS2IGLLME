/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.82
 * Generated at: 2017-12-19 14:39:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import P6.Utilidades;

public final class Grafico_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");

        int x1=Integer.parseInt(request.getParameter("x1"));
        int y1=Integer.parseInt(request.getParameter("y1"));
        int p1=Integer.parseInt(request.getParameter("p1"));
        int x2=Integer.parseInt(request.getParameter("x2"));
        int y2=Integer.parseInt(request.getParameter("y2"));
        int p2=Integer.parseInt(request.getParameter("p2"));
        int x3=Integer.parseInt(request.getParameter("x3"));
        int y3=Integer.parseInt(request.getParameter("y3"));
        int p3=Integer.parseInt(request.getParameter("p3"));
        int x4=Integer.parseInt(request.getParameter("x4"));
        int y4=Integer.parseInt(request.getParameter("y4"));
        int p4=Integer.parseInt(request.getParameter("p4"));
        String pers=request.getParameter("persona");
        String color="red";
        if(pers.equalsIgnoreCase("melchor"))
        {
            color="blue";
        }
        if(pers.equalsIgnoreCase("gaspar"))
        {
            color="green";
        }
        if(pers.equalsIgnoreCase("baltasar"))
        {
            color="yellow";
        }
        ArrayList<ArrayList<Integer>> datos=Utilidades.montarDatos(x1, y1, p1, x2, y2, p2, x3, y3, p3, x4, y4, p4);
        ArrayList<Integer> camino = Utilidades.MejorCamino(datos);
        
        

        
      out.write("\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        \n");
      out.write("        \n");
      out.write("        <h1>Ruta a seguir:</h1>\n");
      out.write("        <svg height=\"500\" width=\"500\">\n");
      out.write("        <polyline points=\"0,0 0,500 500,500 500,0 0,0\" style=\"fill:white;stroke:black;stroke-width:3\" />\n");
      out.write("        <polyline points=\"0,0 ");
      out.print(datos.get(camino.get(0)-1).get(0));
      out.write(',');
      out.print(datos.get(camino.get(0)-1).get(1)
                  );
      out.write(' ');
      out.print(datos.get(camino.get(1)-1).get(0));
      out.write(',');
      out.print(datos.get(camino.get(1)-1).get(1)
                  );
      out.write(' ');
      out.print(datos.get(camino.get(2)-1).get(0));
      out.write(',');
      out.print(datos.get(camino.get(2)-1).get(1)
                  );
      out.write(' ');
      out.print(datos.get(camino.get(3)-1).get(0));
      out.write(',');
      out.print(datos.get(camino.get(3)-1).get(1)
                  );
      out.write(" \" style=\"fill:white;stroke:");
      out.print(color);
      out.write(";stroke-width:3\" />\n");
      out.write("\n");
      out.write("        <circle cx=\"");
      out.print(datos.get(camino.get(0)-1).get(0));
      out.write("\" cy=\"");
      out.print(datos.get(camino.get(0)-1).get(1));
      out.write("\" r=\"");
      out.print(datos.get(camino.get(0)-1).get(2));
      out.write("\" stroke=\"black\" stroke-width=\"");
      out.print(datos.get(camino.get(0)-1).get(2));
      out.write("\" fill=\"");
      out.print(color);
      out.write("\" />\n");
      out.write("        <circle cx=\"");
      out.print(datos.get(camino.get(1)-1).get(0));
      out.write("\" cy=\"");
      out.print(datos.get(camino.get(1)-1).get(1));
      out.write("\" r=\"");
      out.print(datos.get(camino.get(1)-1).get(2));
      out.write("\" stroke=\"black\" stroke-width=\"");
      out.print(datos.get(camino.get(1)-1).get(2));
      out.write("\" fill=\"");
      out.print(color);
      out.write("\" />\n");
      out.write("        <circle cx=\"");
      out.print(datos.get(camino.get(2)-1).get(0));
      out.write("\" cy=\"");
      out.print(datos.get(camino.get(2)-1).get(1));
      out.write("\" r=\"");
      out.print(datos.get(camino.get(2)-1).get(2));
      out.write("\" stroke=\"black\" stroke-width=\"");
      out.print(datos.get(camino.get(2)-1).get(2));
      out.write("\" fill=\"");
      out.print(color);
      out.write("\" />\n");
      out.write("        <circle cx=\"");
      out.print(datos.get(camino.get(3)-1).get(0));
      out.write("\" cy=\"");
      out.print(datos.get(camino.get(3)-1).get(1));
      out.write("\" r=\"");
      out.print(datos.get(camino.get(3)-1).get(2));
      out.write("\" stroke=\"black\" stroke-width=\"");
      out.print(datos.get(camino.get(3)-1).get(2));
      out.write("\" fill=\"");
      out.print(color);
      out.write("\" />\n");
      out.write("\n");
      out.write("        </svg>\n");
      out.write("        \n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
